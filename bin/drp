#!/usr/bin/env python
# encoding: utf-8
#

import click

from astropy.io import fits
from lvmdrp.functions.run_drp import run_drp, get_config_options
from lvmdrp.functions.imageMethod import preproc_raw_frame


@click.group('drp', short_help='run the drp reduction')
def cli():
    pass


@cli.command('run', short_help='run the drp end-to-end')
@click.option('-m', '--mjd', type=int, help='an MJD to reduce', required=True)
@click.option('--skip-bp', is_flag=True, default=False, help='Flag to only skip bias/dark reduction')
@click.option('--arc', is_flag=True, default=False, help='Flag to only reduce arc frames')
@click.option('--flat', is_flag=True, default=False, help='Flag to only reduce flat frames')
@click.option('--only-cal', is_flag=True, default=False, help='Flag to only reduce calibration frames')
@click.option('--only-sci', is_flag=True, default=False, help='Flag to only reduce science frames')
def run(mjd, skip_bp, arc, flat, only_cal, only_sci):
    run_drp(mjd=mjd, flat=flat, arc=arc, skip_bp=skip_bp, only_cal=only_cal, only_sci=only_sci)


@cli.command('preprocess', short_help='preprocess raw frames')
@click.argument('filename', type=click.Path(exists=True))
@click.option('-f', '--flavor', type=str, help='the flavor of the file', required=True)
def preprocess(filename, flavor):

    # get metadata for a single file
    hdr = fits.getheader(filename)
    camera = hdr.get("CCD")
    mjd = hdr.get("MJD")
    tileid = hdr.get("TILEID", 1111)
    expnum = f'{hdr.get("EXPOSURE"):0>8}'

    # get custom config options
    kwargs = get_config_options('reduction_steps.preproc_raw_frame', flavor)

    # preprocess the frame
    preproc_raw_frame(filename, flavor=flavor, kind='p', camera=camera,
                      mjd=mjd, expnum=expnum, tileid=tileid, **kwargs)


if __name__ == "__main__":
    cli()
