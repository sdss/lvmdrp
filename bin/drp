#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Bernd Husemann, Alfredo Mejía-Narváez
# @Date: Dec 7, 2022
# @Filename: drp
# @License: BSD 3-Clause
# @Copyright: SDSS-V LVM

import sys

from lvmdrp.utils.logger import get_logger
from lvmdrp.functions import (commandMethod, headerMethod, imageMethod, rssMethod, skyMethod, fluxCalMethod)


drp_logger = get_logger(name="lvm-drp")


if __name__=="__main__":
    args = sys.argv[1:]
    if len(args)==0:
        drp_logger.info('No subcategory of commands given.')
        drp_logger.info('Please use "drp help" for a list of valid command categories')
    elif args[0]=='help':
        drp_logger.info('')
        drp_logger.info('Available command SUBCATEGORIES of drp:')
        i=1
        methods = dir()
        for func in methods:
            if "Method" in func:
                drp_logger.info('%i. %s  >> %s '%(i, func.split('Method')[0], eval(func+'.description')))
                i+=1
        drp_logger.info('')
        drp_logger.info('Please use "drp SUBCATEGORY help" to get a list of available commands for the category')
        drp_logger.info('')
    
    elif args[0]+'Method' in dir():
        command = args[0]+'Method.'
        if args[1]=='help' and len(args)==2:
            try:
                list_commands = eval("dir(%s)"%(command[:-1]))
                drp_logger.info('')
                drp_logger.info('Available drp COMMANDs within the subcategory %s:' %(args[0]))
                for comm in list_commands:
                    if '_drp' in comm:
                        drp_logger.info( '%s' %(comm.split('_drp')[0]))
                drp_logger.info('')
                drp_logger.info('Please use "drp %s help COMMAND" to detailed information command, its description, '%(args[0]))
                drp_logger.info('You can run the routine by call "drp SUBCATEGORY COMMAND" followed by the required parameters.')
            except KeyError:
                drp_logger.error('You have asked for help about a non-existing subcategory of drp')
                drp_logger.error('Please use "drp help" for a list of valid command categories')
        elif args[1]=='help' and len(args)==3:
            try:
                eval('help('+command+args[2]+'_drp)')
            except:
                drp_logger.error('You asked for help on a non-existing subcategory and/or command of drp')     
        else:
            key=False
            error=False
            command+=args[1]+'_drp('
            for a in args[2:]:
                if not '=' in a and key!=True:
                    command+='"'+a+'"'
                elif '=' in a:
                    entry=a.split('=')
                    command+=entry[0]+'="'+entry[1]+'"'
                    key=True
                else:
                    error=True
                    drp_logger.info('The command you tried to run does not exist in drp')
                    break
                command+=','
            if error==False:
                command=(command[:-1] if command.endswith(",") else command)+')'
                eval(command)
    else:
        drp_logger.info('no')
